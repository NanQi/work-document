* Spacemacs 快捷键学习
** GTD
|-----------+----------------------|
| C-c [     | 将当前文件加入日程表 |
| C-c C-x < | 锁定到当前树         |
| C-c C-x > | 解除锁定             |
| SPC a o a | 查看日程表           |
| C-c ,     | 设置当前标题的优先级 |
** 基础操作
|---------+-----------------|
| SPC b b | buffer 列表     |
| SPC b k | 杀死 buffer     |
| SPC b d | 杀死当前 buffer |
| SPC t n | 切换显示行号    |
** 编程
|-------+--------------------|
| z a   | 切换当前级别的展开 |
| z r   | 展开所有           |
| z m   | 关闭所有           |
| SPC j | 自动对齐           |
** 基本配置
|-----------+-----------------------------|
| SPC f e d | 快速打开配置文件 .spacemacs |
| SPC f e R | 同步配置文件                |
| SPC T n   | 切换主题                    |
| SPC T h   | 选择主题                    |
** Shell
|-------+-------------------|
| SPC ' | 打开/关闭 Shell   |
| C-k   | 前一条 shell 命令 |
| C-j   | 后一条 shell 命令 |
** Git
|-----------+---------------------|
| SPC g i   | git init            |
| SPC g s   | git status          |
| SPC g s s | git add             |
| SPC g S   | git add currentFile |
| SPC g c c | git commit          |
| SPC g P   | git push            |
| SPC g C   | git checkout        |
| SPC g s u | git checkout --     |
| SPC g l l | git log             |
| C-c C-c   | 完成 commit         |
| C-c C-k   | 取消 commit         |
** 文件管理
|---------+--------------------------|
| SPC f f | 打开文件（夹）           |
| SPC f s | 保存文件                 |
| SPC /   | 用合适的搜索工具搜索内容 |
| SPC f R | 重命名当前文件           |
| SPC b k | 关闭当前 buffer          |
** 窗口管理
|------------+-------------------------------|
| SPC f t    | 打开当前文件所在的目录        |
| SPC p t    | 打开当前文件所在的 *根* 目录  |
| SPC 0      | 光标跳转到侧边栏（NeoTree）中 |
| SPC w s/-  | 水平分割窗口                  |
| SPC n(num) | 光标跳转到第 n 个 buffer 中   |
| SPC w v//  | 垂直分割窗口                  |
| SPC w c    | 关闭当前窗口                  |
** NeoTree 
|---------+----------------------------------|
| l       | 展开目录                         |
| h       | 收缩起当前目录或者跳到父节点     |
| \       | 在一个新的垂直分裂窗口中打开文件 |
| -       | 在一个新的水平分裂窗口打开文件   |
| TAB     | 切换拉伸缓冲区                   |
| c       | 创建一个节点                     |
| d       | 删除一个节点                     |
| g r     | 刷新                             |
| s       | 切换是否显示隐藏文件             |
| q / f d | 隐藏缓冲区                       |
| r       | 重命名一个节点                   |

模式行的地方会出现如[x/y] d (D:a, F:b) 格式的字符串:
x 是当前被选中的文件或者目录的索引
y 是当前所在目录的成员（文件和目录）总数
d 当前所在目录的名字
a 当前所在目录的目录数
b 当前所在目录的文件数
** 项目管理
|---------+---------------------------|
| SPC p p | 切换项目                  |
| SPC p D | 在 dired 中打开项目根目录 |
| SPC p f | 在项目中搜索文件名        |
| SPC p R | 在项目中替换字符串        |

根据提示输入「匹配」和「替换」的字符串，然后输入替换的方式：
-----
|------------+----------------------------------------------------|
| E          | 修改刚才输入的「替换」字符串                       |
| RET        | 表示不做处理                                       |
| y          | 表示只替换一处                                     |
| Y          | 表示替换全部                                       |
| d / delete | 表示跳过当前匹配项，匹配下一项                     |
| ^          | 表示跳过当前匹配项，匹配上一项                     |
| ,          | 表示替换当前项，但不移动光标，可和 n 或 ^ 配合使用 |
* 常用技巧
** 让 Spacemacs 支持 EditorConfig
EditorConfig 是一个配置文件，一般位于项目的根目录，它可以让不同的编辑器和 IDE 都按照相同的格式来格式化代码，对于项目的维护者来说是一个很好的工具。
Spacemacs 也支持 EditorConfig，只需要在配置文件中添加配置即可。下面以 OS X 为例，通过以下步骤即可让 Spacemacs 支持 EditorConfig：
1. $ brew install editorconfig
2. 在 ~/.spacemacs 中的 dotspacemacs-additional-packages 中添加 editorconfig：
#+BEGIN_SRC elisp
dotspacemacs-additional-packages '(
   editorconfig
   )
#+END_SRC
3. 创建 .editorconfig 文件，写上自己喜欢的配置。
4. 在 ~/.spacemacs 中的 docspacemacs/user-config 中加入 (editorconfig-mode 1)。
** 设置文件默认的主模式 
虽然我们可以通过 M-x 来设置文件的主模式，但这种方式只是在单独修改某个文件的主模式时好用，如果要把所有同类型的文件都改成其他模式，这种方式的效率就太低了。

在 Spacemacs 中，我们可以用 auto-mode-alist 来设置某一类文件默认的主模式。

我们只需要在 ~/.spacemacs 中的 user-config 中加入下面代码即可：
#+BEGIN_SRC elisp
(add-to-list 'auto-mode-alist '("\\.js\\'" . react-mode))
#+END_SRC
上面代码会用 react-mode 打开所有 .js 文件。
** Emacs 服务器
Spacemacs 会在启动时启动服务器，这个服务器会在 Spacemacs 关闭的时候被杀掉。
*** 使用 Emacs 服务器
当 Emacs 服务器启动的时候，我们可以在命令行中使用 emacsclient 命令：

$ emacsclient -c 用 Emacs GUI 来打开文件
$ emacsclient -t 用命令行中 Emacs 来打开文件
*** 杀掉 Emacs 服务器
除了关闭 Spacemacs 之外，我们还可以用下面的命令来杀掉 Emacs 服务器：

$ emacsclient -e '(kill-emacs)'
*** 持久化 Emacs 服务器
我们可以持久化 Emacs 服务器，在 Emacs 关闭的时候，服务器不被杀掉。只要设置 ~/.spacemacs 中 dotspacemacs-persistent-server 为 t 即可。

但这种情况下，我们只可以通过以下方式来杀掉服务器了：

SPC q q 退出 Emacs 并杀掉服务器，会对已修改的 Buffer 给出保存的提示。
SPC q Q 同上，但会丢失所有未保存的修改。
